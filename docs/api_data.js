define({ "api": [  {    "type": "post",    "url": "/api/movies",    "title": "Create a movie",    "name": "CreateMovie",    "group": "Movie",    "version": "1.0.0",    "description": "<p>Registers a new movie.</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>A unique identifier for the movie generated by the server</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The title of the movie</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>How the movie has been rated on a scale of 0 to 10</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "directorHref",            "description": "<p>A hyperlink reference to the person who directed the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the movie was registered</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://evening-meadow-25867.herokuapp.com/api/movies/58b2926f5e1def0123e97281\n\n{\n  \"id\": \"58b2926f5e1def0123e97281\",\n  \"title\": \"Die Hard\",\n  \"rating\": 7.4,\n  \"directorHref\": \"/api/people/58b2926f5e1def0123e97bc0\",\n  \"createdAt\": \"1988-07-12T00:00:00.000Z\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "POST /api/movies HTTP/1.1\nContent-Type: application/json\n\n{\n  \"title\": \"Die Hard\",\n  \"rating\": 7.4,\n  \"directorHref\": \"/api/people/58b2926f5e1def0123e97bc0\"\n}",        "type": "json"      }    ],    "filename": "routes/movies.js",    "groupTitle": "Movie",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..50",            "optional": false,            "field": "title",            "description": "<p>The title of the movie (must be unique)</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "0..10",            "optional": true,            "field": "rating",            "description": "<p>How the movie has been rated on a scale of 0 to 10</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "directorHref",            "description": "<p>A hyperlink reference to the person who directed the movie (either the full path to the resource, e.g. <code>/api/people/58b2926f5e1def0123e97bc0</code>, or just the ID, e.g. <code>58b2926f5e1def0123e97bc0</code>)</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the movie's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Movie validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `title` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"title\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/api/movies/:id",    "title": "Delete a movie",    "name": "DeleteMovie",    "group": "Movie",    "version": "1.0.0",    "description": "<p>Permanently deletes a movie.</p>",    "examples": [      {        "title": "Example",        "content": "DELETE /api/movies/58b2926f5e1def0123e97bc0 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "204 No Content",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "routes/movies.js",    "groupTitle": "Movie",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the movie to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No movie was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo movie found with ID 58b2926f5e1def0123e97281",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/api/movies/:id",    "title": "Partially update a movie",    "name": "PartiallyUpdateMovie",    "group": "Movie",    "version": "1.0.0",    "description": "<p>Partially updates a movie's data (only the properties found in the request body will be updated). All properties are optional.</p>",    "examples": [      {        "title": "Example",        "content": "PATCH /api/movies/58b2926f5e1def0123e97281 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"rating\": 6.7\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0123e97281\",\n  \"title\": \"Die Hard\",\n  \"rating\": 6.7,\n  \"directorHref\": \"/api/people/58b2926f5e1def0123e97bc0\",\n  \"createdAt\": \"1988-07-12T00:00:00.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The title of the movie</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>How the movie has been rated on a scale of 0 to 10</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "directorHref",            "description": "<p>A hyperlink reference to the person who directed the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the movie was registered</p>"          }        ]      }    },    "filename": "routes/movies.js",    "groupTitle": "Movie",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the movie to retrieve</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..50",            "optional": false,            "field": "title",            "description": "<p>The title of the movie (must be unique)</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "0..10",            "optional": true,            "field": "rating",            "description": "<p>How the movie has been rated on a scale of 0 to 10</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "directorHref",            "description": "<p>A hyperlink reference to the person who directed the movie (either the full path to the resource, e.g. <code>/api/people/58b2926f5e1def0123e97bc0</code>, or just the ID, e.g. <code>58b2926f5e1def0123e97bc0</code>)</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No movie was found corresponding to the ID in the URL path</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the movie's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo movie found with ID 58b2926f5e1def0123e97281",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Movie validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `title` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"title\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/movies/:id",    "title": "Retrieve a movie",    "name": "RetrieveMovie",    "group": "Movie",    "version": "1.0.0",    "description": "<p>Retrieves one movie.</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/movies/58b2926f5e1def0123e97281 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0123e97281\",\n  \"title\": \"Die Hard\",\n  \"rating\": 7.4,\n  \"directorHref\": \"/api/people/58b2926f5e1def0123e97bc0\",\n  \"createdAt\": \"1988-07-12T00:00:00.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The title of the movie</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>How the movie has been rated on a scale of 0 to 10</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "directorHref",            "description": "<p>A hyperlink reference to the person who directed the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the movie was registered</p>"          }        ]      }    },    "filename": "routes/movies.js",    "groupTitle": "Movie",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the movie to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No movie was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo movie found with ID 58b2926f5e1def0123e97281",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/movies",    "title": "List movies",    "name": "RetrieveMovies",    "group": "Movie",    "version": "1.0.0",    "description": "<p>Retrieves a paginated list of movies.</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/movies?page=2&pageSize=50 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://evening-meadow-25867.herokuapp.com/api/movies?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n[\n  {\n    \"id\": \"58b2926f5e1def0123e97281\",\n    \"title\": \"Die Hard\",\n    \"rating\": 7.4,\n    \"directorHref\": \"/api/people/58b2926f5e1def0123e97bc0\",\n    \"createdAt\": \"1988-07-12T00:00:00.000Z\"\n  },\n  {\n    \"id\": \"58b2926f5e1def0123e97282\",\n    \"title\": \"Die Hard With a Vengance\",\n    \"rating\": 8.3,\n    \"directorHref\": \"/api/people/58b2926f5e1def0123e97bc0\",\n    \"createdAt\": \"1995-05-19T00:00:00.000Z\"\n  }\n]",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The title of the movie</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>How the movie has been rated on a scale of 0 to 10</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "directorHref",            "description": "<p>A hyperlink reference to the person who directed the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the movie was registered</p>"          }        ],        "Response headers": [          {            "group": "Response headers",            "type": "String",            "optional": false,            "field": "Link",            "description": "<p>Links to the first, previous, next and last pages of the collection (if applicable)</p>"          }        ]      }    },    "filename": "routes/movies.js",    "groupTitle": "Movie",    "parameter": {      "fields": {        "URL query parameters": [          {            "group": "URL query parameters",            "type": "Number",            "size": "1..",            "optional": true,            "field": "page",            "description": "<p>The page to retrieve (defaults to 1)</p>"          },          {            "group": "URL query parameters",            "type": "Number",            "size": "1..100",            "optional": true,            "field": "pageSize",            "description": "<p>The number of elements to retrieve in one page (defaults to 100)</p>"          }        ]      }    }  },  {    "type": "put",    "url": "/api/movies/:id",    "title": "Update a movie",    "name": "UpdateMovie",    "group": "Movie",    "version": "1.0.0",    "description": "<p>Replaces all the movie's data (the request body must represent a full, valid movie).</p>",    "examples": [      {        "title": "Example",        "content": "PUT /api/movies/58b2926f5e1def0123e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"title\": \"Die Hard 2\",\n  \"rating\": 5.6,\n  \"directorHref\": \"/api/people/58b2926f5e1def0123e97aa2\"\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0123e97281\",\n  \"title\": \"Die Hard\",\n  \"rating\": 5.6,\n  \"directorHref\": \"/api/people/58b2926f5e1def0123e97aa2\",\n  \"createdAt\": \"1988-07-12T00:00:00.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>The title of the movie</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "rating",            "description": "<p>How the movie has been rated on a scale of 0 to 10</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "directorHref",            "description": "<p>A hyperlink reference to the person who directed the movie</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the movie was registered</p>"          }        ]      }    },    "filename": "routes/movies.js",    "groupTitle": "Movie",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the movie to retrieve</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..50",            "optional": false,            "field": "title",            "description": "<p>The title of the movie (must be unique)</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "0..10",            "optional": true,            "field": "rating",            "description": "<p>How the movie has been rated on a scale of 0 to 10</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "directorHref",            "description": "<p>A hyperlink reference to the person who directed the movie (either the full path to the resource, e.g. <code>/api/people/58b2926f5e1def0123e97bc0</code>, or just the ID, e.g. <code>58b2926f5e1def0123e97bc0</code>)</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No movie was found corresponding to the ID in the URL path</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the movie's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo movie found with ID 58b2926f5e1def0123e97281",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Movie validation failed\",\n  \"errors\": {\n    \"title\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `title` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"title\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"title\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/api/people",    "title": "Create a person",    "name": "CreatePerson",    "group": "Person",    "version": "1.0.0",    "description": "<p>Registers a new person.</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>A unique identifier for the person generated by the server</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "gender",            "description": "<p>The gender of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "birthDate",            "description": "<p>The birth date of the person (if any)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the person was registered</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://evening-meadow-25867.herokuapp.com/api/people/58b2926f5e1def0123e97bc0\n\n{\n  \"id\": \"58b2926f5e1def0123e97bc0\",\n  \"name\": \"John Doe\",\n  \"gender\": \"male\",\n  \"birthDate\": \"2001-02-03T08:30:00.000Z\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "POST /api/people HTTP/1.1\nContent-Type: application/json\n\n{\n  \"name\": \"John Doe\",\n  \"gender\": \"male\",\n  \"birthDate\": \"2001-02-03T08:30:00.000Z\"\n}",        "type": "json"      }    ],    "filename": "routes/people.js",    "groupTitle": "Person",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..30",            "optional": false,            "field": "name",            "description": "<p>The name of the person (must be unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"male,female\""            ],            "optional": false,            "field": "gender",            "description": "<p>The gender of the person</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "birthDate",            "description": "<p>The birth date of the person (<a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO-8601</a> format)</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the person's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/api/people/:id",    "title": "Delete a person",    "name": "DeletePerson",    "group": "Person",    "version": "1.0.0",    "description": "<p>Permanently deletes a person.</p>",    "examples": [      {        "title": "Example",        "content": "DELETE /api/people/58b2926f5e1def0123e97bc0 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "204 No Content",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "routes/people.js",    "groupTitle": "Person",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the person to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No person was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1def0123e97bc0",          "type": "json"        }      ]    }  },  {    "type": "patch",    "url": "/api/people/:id",    "title": "Partially update a person",    "name": "PartiallyUpdatePerson",    "group": "Person",    "version": "1.0.0",    "description": "<p>Partially updates a person's data (only the properties found in the request body will be updated). All properties are optional.</p>",    "examples": [      {        "title": "Example",        "content": "PATCH /api/people/58b2926f5e1def0123e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"name\": \"Johnny Doe\",\n  \"birthDate\": \"1999-01-01T08:30:00.000Z\"\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0123e97bc0\",\n  \"name\": \"Johnny Doe\",\n  \"gender\": \"male\",\n  \"birthDate\": \"1999-01-01T08:30:00.000Z\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "gender",            "description": "<p>The gender of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "birthDate",            "description": "<p>The birth date of the person (if any)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the person was registered</p>"          }        ]      }    },    "filename": "routes/people.js",    "groupTitle": "Person",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the person to retrieve</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..30",            "optional": false,            "field": "name",            "description": "<p>The name of the person (must be unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"male,female\""            ],            "optional": false,            "field": "gender",            "description": "<p>The gender of the person</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "birthDate",            "description": "<p>The birth date of the person (<a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO-8601</a> format)</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No person was found corresponding to the ID in the URL path</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the person's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1def0123e97bc0",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/people",    "title": "List people",    "name": "RetrievePeople",    "group": "Person",    "version": "1.0.0",    "description": "<p>Retrieves a paginated list of people.</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/people?page=2&pageSize=50 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://evening-meadow-25867.herokuapp.com/api/people?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n[\n  {\n    \"id\": \"58b2926f5e1def0123e97bc0\",\n    \"name\": \"John Doe\",\n    \"gender\": \"male\",\n    \"birthDate\": \"2001-02-03T08:30:00.000Z\",\n    \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n  },\n  {\n    \"id\": \"58b2926f5e1def0123e97bc1\",\n    \"name\": \"John Smith\",\n    \"gender\": \"male\",\n    \"birthDate\": \"2001-02-04T07:00:00.000Z\",\n    \"createdAt\": \"2017-01-11T09:12:12.000Z\"\n  }\n]",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "gender",            "description": "<p>The gender of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "birthDate",            "description": "<p>The birth date of the person (if any)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the person was registered</p>"          }        ],        "Response headers": [          {            "group": "Response headers",            "type": "String",            "optional": false,            "field": "Link",            "description": "<p>Links to the first, previous, next and last pages of the collection (if applicable)</p>"          }        ]      }    },    "filename": "routes/people.js",    "groupTitle": "Person",    "parameter": {      "fields": {        "URL query parameters": [          {            "group": "URL query parameters",            "type": "Number",            "size": "1..",            "optional": true,            "field": "page",            "description": "<p>The page to retrieve (defaults to 1)</p>"          },          {            "group": "URL query parameters",            "type": "Number",            "size": "1..100",            "optional": true,            "field": "pageSize",            "description": "<p>The number of elements to retrieve in one page (defaults to 100)</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/api/people/:id",    "title": "Retrieve a person",    "name": "RetrievePerson",    "group": "Person",    "version": "1.0.0",    "description": "<p>Retrieves one person.</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/people/58b2926f5e1def0123e97bc0 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0123e97bc0\",\n  \"name\": \"John Doe\",\n  \"gender\": \"male\",\n  \"birthDate\": \"2001-02-03T08:30:00.000Z\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "gender",            "description": "<p>The gender of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "birthDate",            "description": "<p>The birth date of the person (if any)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the person was registered</p>"          }        ]      }    },    "filename": "routes/people.js",    "groupTitle": "Person",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the person to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No person was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1def0123e97bc0",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/api/people/:id",    "title": "Update a person",    "name": "UpdatePerson",    "group": "Person",    "version": "1.0.0",    "description": "<p>Replaces all the person's data (the request body must represent a full, valid person).</p>",    "examples": [      {        "title": "Example",        "content": "PUT /api/people/58b2926f5e1def0123e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"name\": \"Jenny Doe\",\n  \"gender\": \"female\",\n  \"birthDate\": \"1999-01-01T08:30:00.000Z\"\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0123e97bc0\",\n  \"name\": \"Jenny Doe\",\n  \"gender\": \"female\",\n  \"birthDate\": \"1999-01-01T08:30:00.000Z\",\n  \"createdAt\": \"2017-01-01T14:31:87.000Z\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "gender",            "description": "<p>The gender of the person</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "birthDate",            "description": "<p>The birth date of the person (if any)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "createdAt",            "description": "<p>The date at which the person was registered</p>"          }        ]      }    },    "filename": "routes/people.js",    "groupTitle": "Person",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the person to retrieve</p>"          }        ],        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..30",            "optional": false,            "field": "name",            "description": "<p>The name of the person (must be unique)</p>"          },          {            "group": "Request body",            "type": "String",            "allowedValues": [              "\"male,female\""            ],            "optional": false,            "field": "gender",            "description": "<p>The gender of the person</p>"          },          {            "group": "Request body",            "type": "String",            "optional": true,            "field": "birthDate",            "description": "<p>The birth date of the person (<a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO-8601</a> format)</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No person was found corresponding to the ID in the URL path</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the person's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1def0123e97bc0",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Person validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",          "type": "json"        }      ]    }  }] });
